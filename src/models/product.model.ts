// src/models/product.model.ts
import mongoose, { Document, Schema, Model } from 'mongoose';

// Interface for Product document
export interface IProduct extends Document {
    _id: mongoose.Types.ObjectId; // Changed to ObjectId type
    name: string;
    description: string;
    price: number;
    stock: number;
    category: string;
    imageUrl?: string;
    rating?: number; // Added for frontend display
    specs?: string[]; // Added for frontend display
    currency?: string; // Added for frontend display
    isOnSale?: boolean; // Added for frontend display
    originalPrice?: number; // Added for frontend display
    createdAt: Date;
    updatedAt: Date;
}

// Interface for Product model
interface IProductModel extends Model<IProduct> {
    // Static methods can be defined here
}

// Create the schema
const productSchema = new Schema<IProduct, IProductModel>(
    {
        // _id is automatically generated by Mongoose if not provided, and will be ObjectId
        name: {
            type: String,
            required: true,
            trim: true
        },
        description: {
            type: String,
            required: true
        },
        price: {
            type: Number,
            required: true,
            min: 0
        },
        stock: {
            type: Number,
            required: true,
            min: 0,
            default: 0
        },
        category: {
            type: String,
            required: true
        },
        imageUrl: {
            type: String,
            required: false
        },
        rating: { // New field for product rating
            type: Number,
            min: 0,
            max: 5,
            default: 0
        },
        specs: { // New field for product specifications
            type: [String], // Array of strings
            default: []
        },
        currency: { // New field for currency (e.g., "LKR")
            type: String,
            default: "LKR"
        },
        isOnSale: { // New field to indicate if product is on sale
            type: Boolean,
            default: false
        },
        originalPrice: { // New field for original price if on sale
            type: Number,
            min: 0,
            required: function(this: IProduct) { return this.isOnSale === true; } // Required if isOnSale is true
        }
    },
    {
        timestamps: true // Adds createdAt and updatedAt fields automatically
    }
);

// Create and export the Product model
export const Product = mongoose.model<IProduct, IProductModel>('Product', productSchema);

export type ProductDocument = IProduct;
export type ProductModel = IProductModel;
